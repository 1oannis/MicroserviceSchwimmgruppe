# Copyright (C) 2022 - present Ioannis Theodosiadis, Hochschule Karlsruhe

---
server:
  #port: 8080
  compression:
    enabled: true
    mime-types: application/hal+json
    min-response-size: 2KB
  error.whitelabel.enabled: false
  http2.enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.3
    key-alias: microservice
    key-password: zimmermann
    key-store: classpath:keystore.p12
    key-store-password: zimmermann
    key-store-type: PKCS12
    protocol: TLS
    trust-store: classpath:truststore.p12
    trust-store-password: zimmermann
    trust-store-type: PKCS12
  shutdown: graceful

spring:
  application.name: schwimmgruppe
  aop.proxy-target-class: false
  # siehe org.springframework.boot.autoconfigure.jackson.JacksonProperties
  jackson:
    default-property-inclusion: non_null
    # siehe com.fasterxml.jackson.databind.DeserializationFeature
    deserialization.read-enums-using-to-string: true
    # siehe com.fasterxml.jackson.databind.SerializationFeature
    serialization.write-enums-using-to-string: true
  lifecycle.timeout-per-shutdown-phase: 3s
  mail:
    host: localhost
    port: 5025
    #protocol: smtp
    properties.mail:
      debug: false
      smtp:
        auth: false
        starttls.enable: false
    # Mailserver des IZ
    #host: smtp.h-ka.de
    #port: 23
    #username: nnvv0011
    #password: blabla
    # GMail
    #host: smtp.gmail.com
    #port: 587
    #properties.mail.smtp.starttls.enable: true
  main:
    lazy-initialization: true
    web-application-type: reactive
  security.user.password: p
  spel.ignore: true

info.app:
  author: Ioannis Theodosiadis
  lecture: Softwarearchitektur
  semester: 3
  studiengang: Wirtschaftsinformatik

management.endpoints.web.exposure.include: "*"

# --------------------------------------------------------
# E i g e n e   P r o p e r t i e s
# --------------------------------------------------------
app:
  db:
    #system: POSTGRES
    #system: MYSQL
    #system: ORACLE

    #dbname: schwimmgruppe
    #user: schwimmgruppe

    password: p

  mail:
    from: Theo Test <theo@test.de>
    sales: Maxi Musterfrau <maxi.musterfrau@test.de>

---
# alternativ: azure_app_service, sap, heroku
spring.config.activate.on-cloud-platform: kubernetes
management.endpoint.health:
  enabled: true
  probes.enabled: true
  show-details: ALWAYS
spring.lifecycle.timeout-per-shutdown-phase: 30s

---
spring:
  config.activate.on-profile: dev
  # https://stackoverflow.com/questions/53723613/how-to-set-enableloggingrequestdetails-true-in-spring-boot#answer-62817587
  codec.log-request-details: true
  #http.log-request-details: true
  jackson.serialization.indent-output: true
  # -Dreactor.trace.operatorStacktrace=true
  reactor.debugagent.enabled: true
  # Pfad fuer GraphQL: /graphql
  # Pfad f√ºr Schema: /graphql/schema
  graphql.schema.printer.enabled: true
  #devtools:
  #  livereload.enabled: false
  #  restart.trigger-file: /restart.txt

app:
  password: p
  password-falsch: FALSCH
